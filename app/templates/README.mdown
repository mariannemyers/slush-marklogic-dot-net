# MarkLogic-dotnet Generator

This application was generated by the MarkLogic-dotnet [Slush](https://github.com/klei/slush) generator, with the following components:

- [AngularJS](https://angularjs.org/)
- [Gulp](http://gulpjs.com/)
- [ASP.NET Core](https://asp.net) and inspired by [ng2-kestrel-appserver](https://github.com/spboyer/ng2-kestrel-appserver)
- [Roxy Deployer](https://github.com/marklogic/roxy): bootstrap MarkLogic databases, application servers, etc; scaffolding for MarkLogic REST API service extensions

## Install Required Dependencies

- [.NET Core](https://www.microsoft.com/net/core)
TODO Confirm/Remove the following
- [node.js](http://nodejs.org/download/)
- [npm](https://www.npmjs.com/): Built-in package manager for node (comes with
  node, but check to be sure you have latest version: `npm install -g npm`)
- [gulp](http://gulpjs.com/): Javascript task automation (`npm install -g
  gulp`)
- [Bower](http://bower.io/): A package manager for front-end libraries (`npm
  install -g bower`)
- [Git](https://git-scm.com/) - Roxy depends on this version control system
- [Ruby](https://www.ruby-lang.org/en/documentation/installation/) - Roxy
  depends on Ruby in order to run server configuration scripts

# Edit deploy/build.properties

As a temporary solution, edit data/build.properties and set:

    authentication-method=application-level

This will bypass authentication and authorization on MarkLogic and allow anonymous access.  This will
be addressed in a future release.

# Running the application

    ./ml local bootstrap
    ./ml local deploy modules

On Windows, that would be:

    ml.bat local bootstrap
    ml.bat local deploy modules

If you want to upload a dictionary for spell-suggestions:

    ./ml local deploy content

On Windows:

    ml.bat local deploy content

Restore the dependencies

    dotnet restore

Run the applicaiton

    dotnet run

Using Chrome, now visit http://localhost:5000

# Data

## Sample Data

The application comes with 3000 JSON documents generated by json-generator.com.
You can load them with
(MLCP)[https://docs.marklogic.com/guide/ingestion/content-pump] like this:

    ./ml local mlcp -options_file import-sample-data.options

Or on Windows:

    ml.bat local mlcp -options_file import-sample-data.options

## General Data Information

The application comes with a sample set of JSON data. The detail controller,
the part that handles showing your data, can not only handle JSON, but also
XML, Binary, and Text data out of the box.
